---
import { Icon } from 'astro-icon/components';
import Wrapper from './Wrapper.astro';
import TextBlock from './TextBlock.astro';
import Button from './Button.astro';

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline,
  callToAction = await Astro.slots.render('callToAction'),
  items,
  bg = await Astro.slots.render('bg'),
} = Astro.props
---

<Wrapper containerClass='max-w-5xl mx-auto' bg={bg}>
  <div class='flex flex-col gap-8 md:gap-12 md:flex-row'>
    <div class='w-full lg:w-1/2 gap-8 md:gap-12'>
      <TextBlock
        title={title}
        subtitle={subtitle}
        tagline={tagline}
      />

      <div class="w-full md:text-left rtl:md:text-right">
        {
          typeof callToAction === 'string' ? (
            <Fragment set:html={callToAction} />
          ) : (
            callToAction &&
            callToAction.text &&
            callToAction.href && (
              <Button variant="link" {...callToAction} class="mb-12 w-auto"/>
            )
          )
        }
      </div>
    </div>

    <div class="w-full lg:w-1/2 px-0">
      <ul class="space-y-10">
        {
          items && items.length
            ? items.map(({ description, icon, url }) => (
                <li>
                  <a href={url} class="flex items-center justify-start gap-6">
                    <div class="w-16 h-16 rounded-full bg-blue-100">
                      <img
                        src={icon} 
                        alt={`GitHub avatar for user ${description}`}
                        class="rounded-full object-cover object-center"
                        loading="eager"
                      />
                    </div>
                    <p class="text-muted dark:text-gray-400" set:html={description} />
                  </a>
                  </li>
              ))
            : ''
        }
      </ul>
    </div>
  </div>
</Wrapper>