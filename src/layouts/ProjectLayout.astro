---
import { getEntries } from "astro:content";
import { Icon } from "astro-icon/components";
import BaseLayout from "./BaseLayout.astro";
import Link from "../components/Link.astro";

import {
  extractUniqueTagsObject,
  findLabInfo,
  generatePublicationLinks,
  getBackgroundColor,
} from "../utils/tagManipulation";

const { frontmatter } = Astro.props;
const relatedBlogPosts = frontmatter["related blog posts"]
  ? await getEntries(frontmatter["related blog posts"])
  : null;

//Have to set data: frontmatter b/c the function expects an obj in the format {data: {key: value}}
//And frontmatter = data
const tagsObj = extractUniqueTagsObject({ data: frontmatter });
const labInfoArray = findLabInfo(frontmatter["development team"]);
const pubInfoArray = generatePublicationLinks(frontmatter);

const baseUrl = import.meta.env.BASE_URL;
const githubIssueUrl_obj = new URL("/issues", frontmatter["github link"]);
console.log(githubIssueUrl_obj);
const githubIssueUrl_str = githubIssueUrl_obj.href;
---

<BaseLayout>
  <div class="mx-auto px-6 sm:px-6 pt-8 md:pt-4 max-w-6xl">
    <Link class="md:hidden" text="Projects" url={`${baseUrl}/projects`} />
  </div>
  <div
    class="py-8 md:py-16 lg:py-20 mx-auto max-w-6xl flex flex-col md:grid grid-cols-6"
  >
    <section class="row-start-1 row-span-1 col-span-4">
      <h1
        class="px-6 mx-auto text-4xl md:text-5xl font-bold leading-tighter tracking-tighter font-heading"
      >
        {frontmatter.title}
      </h1>
      <p
        class="mx-auto mt-6 md:mt-10 px-6 text-xl md:text-2xl text-muted dark:text-slate-400"
      >
        {frontmatter.tagline}
      </p>
    </section>

    <div class="row-start-1 row-span-2 col-start-5 col-span-2">
      <div
        class="flex flex-col gap-4 max-w-3xl m-6 p-6 rounded-md shadow-md bg-blue-50 dark:bg-slate-900"
      >
        <h2 class="text-lg font-bold">Quick links</h2>
        <div class="flex flex-col gap-1">
          <h3 class="font-bold mb-2">Get started</h3>
          {
            frontmatter["github link"] && (
              <a
                class="self-start flex items-center gap-1 transition ease-in duration-200 hover:bg-gray-100 dark:text-slate-300 dark:hover:bg-slate-800 cursor-pointer"
                href={frontmatter["github link"]}
              >
                <Icon
                  name="tabler:square-chevron-right"
                  class="w-5 h-5  inline-block"
                />
                Source code
              </a>
            )
          }

          {
            frontmatter["documentation link"] && (
              <a
                class="self-start flex items-center gap-1 transition ease-in duration-200 hover:bg-gray-100 dark:text-slate-300 dark:hover:bg-slate-800 cursor-pointer"
                href={frontmatter["documentation link"]}
              >
                <Icon
                  name="tabler:square-chevron-right"
                  class="w-5 h-5  inline-block"
                />
                Documentation
              </a>
            )
          }

          {
            frontmatter["installation instructions link"] && (
              <a
                class="self-start flex items-center gap-1 transition ease-in duration-200 hover:bg-gray-100 dark:text-slate-300 dark:hover:bg-slate-800 cursor-pointer"
                href={frontmatter["installation instructions link"]}
              >
                <Icon
                  name="tabler:square-chevron-right"
                  class="w-5 h-5  inline-block"
                />
                How to install
              </a>
            )
          }
        </div>
        <div class="flex flex-col gap-1">
          <h3 class="font-bold">Get help</h3>
          {
            frontmatter["github link"] && (
              <a class="self-start btn-filter" href={githubIssueUrl_str}>
                Open an issue on GitHub
              </a>
            )
          }
          {
            frontmatter["maintainer"] && (
              <a
                class="self-start btn-filter"
                href={frontmatter["maintainer contact info"]}
              >
                Reach out with a question
              </a>
            )
          }
        </div>
        <div class="flex flex-col gap-1">
          <h3 class="font-bold">Cite this software</h3>
          {
            frontmatter["how to cite text"] && (
              <Link
                text={frontmatter["how to cite text"]}
                url={frontmatter["installation instructions link"]}
              />
            )
          }
        </div>

        <h2 class="font-bold text-lg">Additional information</h2>
        <div class="flex flex-col gap-1">
          {
            labInfoArray && (
              <div class="flex flex-wrap gap-2">
                <p class="font-semibold">Development Team: </p>
                {labInfoArray.map((labInfo) => {
                  if (labInfo) {
                    const { name, url } = labInfo;
                    return <Link text={name} url={url} />;
                  }
                })}
              </div>
            )
          }
        </div>

        {
          frontmatter["open source license"] &&
            `, ${frontmatter["open source license"]} license`
        }

        {
          pubInfoArray && (
            <div class="flex flex-wrap gap-2 mb-2">
              <p class="font-bold">Publications:</p>
              {pubInfoArray.map((pubInfo) => (
                <Link text={pubInfo.text} url={pubInfo.url} />
              ))}
            </div>
          )
        }

        {
          relatedBlogPosts && (
            <div class="flex flex-wrap gap-2 mb-2">
              <p class="font-bold pr-2">Related blog posts:</p>
              {relatedBlogPosts.map((blog) => (
                <Link
                  text={blog?.data?.title}
                  url={`${baseUrl}/blog/${blog?.slug}`}
                />
              ))}
            </div>
          )
        }

        {
          (frontmatter["project homepage link array"] ||
            frontmatter["OSSI proposal link"]) && (
            <div>
              {frontmatter["OSSI proposal link"] && (
                <div class="mb-1">
                  <Link
                    text="OSSI funding proposal"
                    url={frontmatter["OSSI proposal link"]}
                  />
                </div>
              )}

              {frontmatter["project homepage link array"] &&
                (frontmatter["project homepage link array"].length === 1 ? (
                  <Link
                    text="Project website"
                    url={frontmatter["project homepage link array"]}
                  />
                ) : (
                  frontmatter["project homepage link array"].map(
                    (link, index) => (
                      <div class="mb-1">
                        <Link
                          text={
                            frontmatter["project homepage text array"][index]
                          }
                          url={link}
                        />
                      </div>
                    )
                  )
                ))}
            </div>
          )
        }
      </div>

      <div class="mx-auto px-6 sm:px-6 mt-4 flex flex-wrap gap-2">
        {
          Object.entries(tagsObj).map(([key, tags]) => {
            return tags.map((tag) => {
              return (
                <span
                  class="bg-primary text-white px-2 py-1 rounded-md text-sm"
                  style={{ backgroundColor: getBackgroundColor(key) }}
                >
                  {tag}
                </span>
              );
            });
          })
        }
      </div>
    </div>

    <section
      class="col-span-4 row-start-2 mx-auto px-6 prose prose-lg lg:prose-xl dark:prose-invert dark:prose-headings:text-slate-300 prose-md prose-headings:font-heading prose-headings:leading-tighter prose-headings:tracking-tighter prose-headings:font-bold prose-a:text-primary dark:prose-a:text-blue-400 prose-img:rounded-md prose-img:shadow-lg"
    >
      {
        frontmatter["image file"] && (
          <div class="">
            <img
              src={`${baseUrl}/project-images/${frontmatter["image file"]}`}
              class="max-w-full mx-auto rounded-md bg-gray-400 dark:bg-slate-700"
              loading="eager"
            />
          </div>
        )
      }
      <div class="mx-auto mt-6 md:mt-10">
        <div class="border-t dark:border-slate-700"></div>
      </div>

      <!-- This slot is where the content is rendered -->
      <slot />
      <!-- This slot is where the content is rendered -->
    </section>
  </div>
</BaseLayout>
