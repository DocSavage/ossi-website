---
import "../../styles/tailwind.css";
import { siteConfig } from "../../siteConfig";
import { getCollection } from "astro:content";

import BaseLayout from "../../layouts/BaseLayout.astro";
import Hero from "../../components/Hero.jsx";
import CardsAndFiltersContainer from "../../components/projects/CardsAndFiltersContainer.astro";
import CardContainer from "../../components/projects/CardContainer";
import CardContent from "../../components/projects/CardContent.astro";
import CardImage from "../../components/projects/CardImage";
import FilterMenu from "../../components/projects/FilterMenu";
import ResetProjectTypeBtn from "../../components/projects/ResetProjectTypeBtn";
import ProjectCount from "../../components/projects/ProjectCount";
import ProjectTypeBtns from "../../components/projects/ProjectTypeBtns";
import ProjectTypeDropdown from "../../components/projects/ProjectTypeDropdown";
import Tag from "../../components/projects/Tag.astro";
import ToggleFilterMenuBtn from "../../components/projects/ToggleFilterMenuBtn";

import { extractUniqueTagsObject } from "../../utils/tagManipulation.js";

const baseUrl = import.meta.env.BASE_URL;

const pageTitle = "OSSI-supported projects";
const allProjects = await getCollection("projects");

// uniqueTags is an object where keys = unique tag categories, values = unique tags within a category, both across allProjects. All lowercase.
// used to populate the filter menu
const uniqueTags = extractUniqueTagsObject(allProjects);
---

<BaseLayout pageTitle={pageTitle}>
  <Hero
    client:load
    baseUrl={baseUrl}
    title=`${siteConfig.shortName} Software Projects`
    subtitle=`${siteConfig.name} (${siteConfig.acronymOnly}) supported software projects and other software developed at Janelia`
    heightClasses="h-96 py-20 2xl:pt-36"
    alignmentClasses="2xl:flex-col 2xl:items-start"
  />

  <section
    class="px-6 lg:px-20 xl:px-32 py-6 md:py-12 lg:py-20 mx-auto max-w-6xl lg:max-w-none 2xl:w-11/12 md:grid grid-cols-3 3xl:grid-cols-4 4xl:grid-cols-5 gap-4"
  >
    <div class="col-start-1 col-span-1">
      <FilterMenu uniqueTags={uniqueTags} slot="filterMenu" client:visible />
    </div>

    <div class="col-start-2 col-span-2 3xl:col-span-3 4xl:col-span-4">
      <ProjectTypeBtns
        contentType="projects"
        slot="projectTypeBtns"
        client:visible
      />
      <div class="md:hidden flex flex-col gap-6 items-end min-w-full">
        <div class="flex gap-2 w-full">
          <h3 class="font-bold">Filter by OSSI funding status</h3>
          <ResetProjectTypeBtn slot="resetProjectTypeBtn" client:load />
          <ProjectTypeDropdown slot="projectTypeDropdown" client:visible />
        </div>
        <ToggleFilterMenuBtn
          uniqueTags={uniqueTags}
          slot="toggleFilterMenuBtn"
          client:visible
        />
      </div>
      <ProjectCount
        allContent={allProjects}
        contentType="projects"
        slot="projectCount"
        client:load
      />
      <div
        class="lg:grid grid-cols-2 3xl:grid-cols-3 4xl:grid-cols-4 auto-rows-max gap-4"
      >
        <Fragment slot="contentCards">
          {
            allProjects.map((content) => {
              const tagsObj = extractUniqueTagsObject(content);
              // console.log("tagsObj", tagsObj);
              return (
                <CardContainer
                  key={content.slug}
                  baseUrl={baseUrl}
                  url={`${baseUrl}/projects/${content.slug}/`}
                  title={content.data.title}
                  authors={content.data["author names"]}
                  tagline={content.data.tagline}
                  imageSrc={content.data["image file"]}
                  imageAlt={content.data["image alt text"]}
                  tagsObj={tagsObj}
                  projectType={content.data["project type"][0]}
                  client:load
                >
                  <CardImage
                    baseUrl={baseUrl}
                    imageSrc={content.data["image file"]}
                    slot="contentCardImage"
                    client:visible
                  />
                  <CardContent
                    title={content.data.title}
                    authors={content.data["author names"]}
                    tagline={content.data.tagline}
                    tagsObj={tagsObj}
                    slot="cardContent"
                  />
                  <Fragment slot="tags">
                    {Object.entries(tagsObj).map(([tagCat, tags]) => {
                      // console.log(tags);
                      return tags.map((tag) => {
                        return <Tag tagCat={tagCat} tag={tag} />;
                      });
                    })}
                  </Fragment>
                </CardContainer>
              );
            })
          }
        </Fragment>
      </div>
    </div>
  </section>
</BaseLayout>
